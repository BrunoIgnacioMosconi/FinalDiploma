<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCANCELAR.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACcAAAAnCAYAAACMo1E1AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAK
        6QAACukB/XXO0wAAACV0RVh0U29mdHdhcmUATWFjcm9tZWRpYSBGaXJld29ya3MgTVggMjAwNId2rM8A
        AA1pSURBVFhHzZh3dFTVGsWvkYAkQAICSiDSogQVUHo1IBAQlI4NNXZ9ZkLAJ6BSpQhBVOyijF1BBEVF
        sNFSJ4WQSZtJJmX6ZHrKQEIK++0zITAzZL213h9vLb+19rpnzr2Z+zv7fOc7ZyIB+Meq3c4ESYo8FBOz
        7FRiouz0qlVeJa9eLUtes0aW8sorspS1a2Wp69bJUtevl6Vu2CBL27RJlv7aa7KMzZtlGVu2yBRbt8oU
        27bJMrdvl2Xu2CHLSkqSZVJZO3fKMoXYzt61S3b8uede2BMRMaE9BiH/D5IUfGju3N2Fn39+3pCRAUte
        HqqUSljz82ErLIS9qAgOlQpOtRrO0lK4NBq4y8tRXVGBmspK1Oh0qNXrUWcwwGMywWM2w2Ox4FxVFc5Z
        rThvs+G83Y7zDgfqnU5v28nvPbN7d8Z6SRrly+LludyQpA4/L116rOyPP1CpUKD4119R+OOPKP7pJ6gO
        H4b6l19Qyj6N0G+/oezoUZQfO4ZKPq8V+vNP6P76C/q//4bh+HEYT570ynTqFEzJyTClpMCUmgpzWhrM
        6ekwi8FnZ3sH1ujxoOTAAc/6bt3Gtgv30W23var84gvkHzqErE8+wRm5HHmff4489im//BL5X32Fwq+/
        RtE336D422+h+u47qPftQ+n+/dAcOICKH35AxcGDqODfC1VyYJUclFaIA9NyUDohDkzHgek5MN3vv0Mr
        2hyMcFeRlFRCkzr7wfWXpG5H4uJMZ/nizA8+QM6ePThDwLOffgrl3r1QEjT/s8/A6UYxYVWEVRO2hM9r
        BCj7s/g3WXxezXtaglZSWsLqCKojqI4zoCeo4eefYSCsgaDGI0dgJKyeVzMBDXR9e3T0Mj+4uZI0/vDD
        DyOHQFnvvovs999HDpVL0LyPPoKSyufLC3i/iAAqAqsIrCawmp8L+WInc6uaOaSiGxrCaumsToju6r7/
        HnrKQIcNBDYS2Cv+nYnAJgKbCFzJ+x9NmPBJINxM+Z13IotAmbt2IfvNN5H91ls48/bbOPvOO1ASWPne
        eyjg/SICF3/4IVQEVn/8MdS8NlRX82tao7mxERWcfi3BdXRRR4f1/Gygy0a6bCSwicAmpoOZwGYCmemy
        ldNbsHYttvXo8R2/5grcfZIU+96NNyJ9xw4oqCwqOykJOVTuG28gj8BKAucTuJDAxbt3Q0VgFcFLCdxU
        Wyu4WqOlxQtQSWgdXdXTZQNBjZSJjpoJ7BWBzQS2ENjC5x2c5jNxcVgnSf5wCwn3VmgoTr/yClijkLl5
        M7K3bEEO27mvv4687duhpAoIW7xzJ9S8lhBYTfBSQjf6OHexuRkG5qWO8FrCl/EZI103MyVMlJnAFgJb
        mBZVBLYS2MrnXczLrLlzsVaS9vFrrsAtJtyua67B8fh4KDZuROa6dchevx45bOdu2oSzr72GfMLmsT/t
        1VeRwr4cXku2bUMpXW50uwWXNwSciS/X8Hkl87SIeVXA6S/nIK1MCQtTooqyss8mxGfshHZzajNHj8aG
        9uDeZPPPJ56Agi9VrFmDrJdfRjZ1hp+VAnbFCmTQJRuLbS1hyljD8tmvoctXwdGxCrrSyLaIxqYmb23U
        cJB2poWN9+101k5HHUwLF110cKDpnTtjcyDcEjGtbB594AEoVq1CxsqVyHzxRWS/9BJy+TnrX/9CNr/o
        woUL4l2Xo5IOlaxejSaX61JPK5yeL6plwQ0ME4t75YYNcDI1HEwLJ+UiqJtOGqKioCDD1vac283mb4sW
        QZGYiAxOb6ZMhuyEBGQ/+ywUHHEgmAg9gUvoaBO3orYQcEbCielqL0xi1+CMuJnDLqZENZ2z3XUX9Hx/
        LrWtPbh3Bdy99yLj+eeR/vTTyCRU9jPPIJXtau6TgWFlfVLRUQ1dDoSz8MUGDszOHGv2uSfiImXkNLoJ
        WMPV77zvPlTx3ZbgYORf1wnbg4L84RYR7n02j8yahYwnn0Q6l3Tm448jbckSqLnkA0OUhMJly1DCgZTR
        5UZu5G1xkfllYR6ali+HifA2TmMzi7NviK3KtmEj3PPnoeraa2DrFoqqXt1R0Ls7tgd3uBruQwF3991I
        406RJnKPSn/oIdTxNOEbDm7w+Zx+NQdRSpXRYT/nWOequMrNzz0HKwGtdN7NHBOO+oZ1/TpY+U5br3A4
        InvDOigChQP6YHvH4KvhPmbztylTvG6lLVyItHvu8a5G32iuq0MxgYruvx/qRx9F6SOPoIxq5FGoLbzO
        Ecry1FOwEtBOd218piFggdQePICqkA6wD4yAY8hNsN02EMVD+mPHdR394e4n3F7h3PjxSGXepbEYJjNJ
        K7n1+IbrxAkoZ86EigMoIaCG7moWLECVqHXMSzF9Li4EE/urmBY2liYHB+NkCtSxDPlGo1YLa1Q/gkXC
        OTwK9lHRUI+4GTs6d/KHW0a4L4RzI0ciJTYWqdOnI2XCBFTxnOYbRtam/JgYqObNQ8n8+V6wck5xxZw5
        0C1dCgPTwMgEtzz4IKxs2wnlIqT7scfgYn5d9KmHLZ46OKaMgePWAXCNuRWOScNROnYokkKu84d7gnDf
        CLhhw5BCx1I5vSmjRsEZMBU6bmf5hFZx4ZRw2jWEKqfLWgLpeDXwahZOMi3shHUyf518zhbZD7ae4Wgx
        +6x65qD7vul0bRDck0fAOW0kNARMCu3sD/cs4fYLuOhoJI8bh5QxY5B8662w8aTgG1puQco77oBq2jSU
        cPFo6HD5jBnQ0W09gU2zZ8NCQCvhbOy3DRwIa8dgKgi2wTeh2e2zB587B/c9MXQtGtUEc8WOQ3nMnUjq
        EuIPF0+4g2weHTAAp0eMQMrw4Tjdvz8MAYW0ipuzcsgQqCZOROmkSSibPBkVdFo3dSr0hDFRZg7O3K8f
        LEFB3vpl7RoCWwgB58Z6a1xbNJuMcNEx95QRqJ45DtVzJ6Fyxhjs7BoAt4JwhwVcRAROCfcIkMwXFLNM
        +EY9Ez6PrqoJXzp2LMo4xRVcRFrmqm7wYOjCwryV3kR5wUKug+36MFg6SHDuFWfIK9F48i+47uSUTh+D
        6nsmoGb+FGhnjyNcqD/cKsIdYfNY7944RceEa6mRkVAQ1LfAitCy6p8ND0cJYUo5GE3XrijjiaaCf6+j
        jJSFsgZ3gDWsC2ydgmCYNAZN589f+obW8GxYDdfom+GeNR7V905C7eJp0M+diJ3dAuBeJdzvbB7jS0/2
        6oVTVApBT3NL0bNM+EYLVbh4Mc7yef4aQSlVTmkpA2Wmqghro2vWIPZH9oGnqLD1jy9FC6fUHTMS7mmj
        6NpEunYX6pZO50qfjDcD4TYS7i82j/JL/2aunOD1NJXCvvQuXVDPn2++0cyVVsqtSQCqqUqqbTqFa0Li
        s3bC2KvARNStWQ7XqKjLrtUsjIHnwZmwLIjBO2EBcFsId4rNY9Rx6iSVTKVRqVQh86uloUF8r1+4WGrK
        WMtUfftC3aEDNHy2vHt36FgLbZ9+gmbuFoFRv+8ruIYPgPvu0XDPnoBqulWzaCo8D8XCyusHYV384XYQ
        TkCIqRVwAlS4JuDEGSuDKuHO0BKQN23RWF+Pc/zlf06tRkNAjvpGww/74Ly9P9ysZ+4ZY1undN4U1DDf
        PA/PgmPJ3dgTCMdTcKwAEHAnqDa4dCqTyqayKDUL8/ncXPGe/ykuEt6TtIVbVV+4xkbDPZX5NpNwcwjH
        qawllGfZLLh4/SxwWj8MDp51JiTkMtxpSjjpCycOgkIFnD4Lz2oNRUXivf81LtbWcBq/hWvGZNgje8DJ
        /dM1ka61wbG2XYGLRTWn9psbeu7nn16B2xoUNK1k0CD8wcUg8s0XTjiWQwkwJVVwSWo+a2RuufhDyMPf
        nw084V5ISUEDfyuc++B91DwZB8ewaNh6hMA+4AY4R9wCJ/fQK3Cthfcy3EMz4IpbAHlY2Gd+cL0laaB2
        yBC9gsX3b3aJxRAIJ1amgCukVFRbGRGLoL3VamXhtfUOh31wXziGDvCePJxjhvo7553Wu7yqf2YBdPfP
        w+OSFO8HJ/55sjc4eJeTJ4fk6KHeqW1bEL7TmkcJ14opUUK8q5MSNU7AeWscZe0UDFtYKOwCjgdJexTP
        bDx9OO+Ias25ScOuAMaOhueRObiwaRUO9+/PcUtDA+GCqGF/RPQ+UfNUHIp5VlPcMgSKPn2Q0ycCuZSS
        7QKqmCqhSqlyqpL39JSRslDWvjyBRA2C/bZoOEYOg2P8SDhixsI5czJcc6bCvWAGqpfMRs2Dc1D7xCLU
        r0tE09Z1SB92uzNakh4jR6gf3CXAUGrKe9d32a9dMMftTHwBrpdWoJqqWbUStatXom71i/BQ5y7pPPsa
        eK+Bz1z4dyIaX1yOppUJaF5xSd62DM2JMrQsj0dLwgtoSuRvDvaL5+tXxMO4cH7zd+HhZ26SpGf4/hsF
        yFVwPoDDOknSk3GhwW8vv7H73oQ+PeQJEdfLE/r2lCf06ymX+Yp9Mt6T8RnZDd3lsl5hctn1XeWy8FB5
        fNfO8viQjvL4jtfK44MkOU8+8heo5yke0eRPU3GStIduvcx3TqNuoK7x4/H94O1oneJwKpIaTEX9HzWA
        4nqUOgVyeFna6/xnCNJ/AGPbzFWH+YZwAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnBUSCAR.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>